;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("startup.h" include (:system-flag t) nil [896 916])
            ("pkgconf/system.h" include (:system-flag t) nil [917 944])
            ("cyg/hal/system.h" include (:system-flag t) nil [945 972])
            ("stdlib.h" include (:system-flag t) nil [1252 1271])
            ("stdio.h" include (:system-flag t) nil [1272 1290])
            ("unistd.h" include (:system-flag t) nil [1291 1310])
            ("ctype.h" include (:system-flag t) nil [1338 1356])
            ("cyg/infra/diag.h" include (:system-flag t) nil [1385 1412])
            ("cyg/io/flash.h" include (:system-flag t) nil [1436 1461])
            ("cyg/kernel/kapi.h" include (:system-flag t) nil [1578 1606])
            ("device_main.h" include nil nil [2053 2077])
            ("parser.h" include (:system-flag t) nil [2078 2097])
            ("denv.h" include (:system-flag t) nil [2134 2151])
            ("config_host.h" include (:system-flag t) nil [2195 2219])
            ("led_handler.h" include (:system-flag t) nil [2256 2280])
            ("default_env.h" include (:system-flag t) nil [2328 2352])
            ("dg_error.h" include nil nil [2408 2429])
            ("bal.h" include nil nil [2573 2589])
            ("burnin.h" include (:system-flag t) nil [2612 2631])
            ("reset_counters.h" include nil nil [3446 3473])
            ("dg_svc_s.h" include nil nil [5597 5618])
            ("dg_trace_by_id" variable (:constant-flag t) nil [7939 7953])
            ("dg_trace_register_name" variable (:constant-flag t) nil [7979 8001])
            ("UNUSED" variable (:constant-flag t) nil [10141 10147])
            ("STACK_SIZE" variable (:constant-flag t) nil [10177 10187])
            ("db_printf" variable (:constant-flag t) nil [10251 10260])
            ("void_diag_printf" variable (:constant-flag t) nil [10496 10512])
            ("REBOOT_STACK_SIZE" variable (:constant-flag t) nil [10586 10603])
            ("REBOOT_THREAD_PRIORITY" variable (:constant-flag t) nil [10693 10715])
            ("DISCL_TMP_TXT_BUF" variable (:constant-flag t) nil [10794 10811])
            ("startup_result" variable
               (:default-value "STARTUP_ERR_OK"
                :type ("cyg_uint32" type (:type "class") nil nil))
                nil [11003 11046])
            ("startup_lab_use_disclaimer" variable
               (:dereference 1
                :constant-flag t
                :default-value "\"IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\0\""
                :type ("DG_CHAR8" type (:type "class") nil nil))
                nil [11298 11837])
            ("OMIT_WATCHDOG_TASK" variable (:constant-flag t) nil [12678 12696])
            ("set_default_env" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [13882 13887]))                  
                :type "void")
                nil [13850 13888])
            ("set_application_env" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [13925 13930]))                  
                :type "void")
                nil [13889 13931])
            ("write_1MB_testfile" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [13967 13972]))                  
                :type "void")
                nil [13932 13973])
            ("print_time" function
               (:prototype-flag t
                :arguments 
                  ( ("text" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [14001 14018])
                    ("relative" variable (:type ("cyg_uint32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14018 14038]))                  
                :type "void")
                nil [13974 14039])
            ("strtolower" function
               (:prototype-flag t
                :pointer 1
                :arguments 
                  ( ("string" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [14067 14080]))                  
                :type "char")
                nil [14040 14081])
            ("start_burnin" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [14580 14585]))                  
                :type ("cyg_uint32" type (:type "class") nil nil))
                nil [14551 14586])
            ("startup" function
               (:typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [20660 20665]))                  
                :type ("cyg_uint32" type (:type "class") nil nil))
                nil [20634 88512])
            ("terminate_wd_task" function
               (:typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [97075 97080]))                  
                :type "void")
                nil [97045 97170])
            ("start_burnin" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [97476 97481]))                  
                :type ("cyg_uint32" type (:type "class") nil nil))
                nil [97452 97904])
            ("board_reset_thread" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("arg" variable (:type ("cyg_addrword_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [97949 97968]))                  
                :type "void")
                nil [97913 98886])
            ("board_reset" function
               (:typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [98936 98941]))                  
                :type "void")
                nil [98912 100266])
            ("board_reset_delayed" function
               (:typemodifiers ("extern")
                :arguments 
                  ( ("delay_ticks" variable (:type ("cyg_uint32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [100323 100346]))                  
                :type "void")
                nil [100291 100403])
            ("software_reset" function
               (:typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [102228 102233]))                  
                :type "void")
                nil [102201 102324])
            ("eth_phy_reset" function
               (:typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [102718 102723]))                  
                :type "void")
                nil [102692 102813])
            ("is_dongle_class_supported" function
               (:typemodifiers ("extern")
                :arguments 
                  ( ("class_x" variable (:type ("cyg_uint32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [102864 102883]))                  
                :type ("cyg_bool" type (:type "class") nil nil))
                nil [102822 103327])
            ("write_1MB_testfile" function (:type "void") nil [105033 105833])
            ("print_time" function
               (:arguments 
                  ( ("text" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [106071 106088])
                    ("relative" variable (:type ("cyg_uint32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [106088 106108]))                  
                :type "void")
                nil [106055 106540])
            ("strtolower" function
               (:pointer 1
                :arguments 
                  ( ("string" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [106644 106657]))                  
                :type "char")
                nil [106627 106778])
            ("get_startup_result" function
               (:typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [107013 107018]))                  
                :type ("cyg_uint32" type (:type "class") nil nil))
                nil [106976 107049]))          
      :file "startup.c"
      :pointmax 107051
      :fsize 110252
      :lastmodtime '(24042 6260 522427 500000)
      :unmatched-syntax '((punctuation 107049 . 107050) (string 12706 . 12789) (symbol 12698 . 12705) (punctuation 12697 . 12698) (symbol 11284 . 11297))
      :lexical-table 
        '(("dg_trace_register_name" (spp-arg-list ("a" "...") 8001 . 8008) . ((semantic-list "((void)0)" 8009 . 8018)))
          ("UNUSED" (spp-arg-list ("x") 10147 . 10150) . ((semantic-list "(void)" 10151 . 10157) (semantic-list "(x)" 10157 . 10160)))
          ("REBOOT_THREAD_PRIORITY" . ((number "3" 10716 . 10717)))
          ("DISCL_TMP_TXT_BUF" . ((number "44" 10812 . 10814)))
          ("dg_trace_by_id" (spp-arg-list ("a" "...") 7953 . 7960) . ((semantic-list "((void)0)" 7961 . 7970)))
          ("STACK_SIZE" . ((number "65536" 10188 . 10193)))
          ("OMIT_WATCHDOG_TASK")
          ("void_diag_printf" . ((semantic-list "(void)" 10513 . 10519) (symbol "diag_printf" 10519 . 10530)))
          ("REBOOT_STACK_SIZE" . ((semantic-list "(CYGNUM_HAL_STACK_SIZE_MINIMUM + 1000)" 10604 . 10642)))
          ("db_printf" (spp-arg-list ("fmt" "...") 10260 . 10269))
          )
))
  :file "!mnt!c!duagon!i214_bek!mod!config!src!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
