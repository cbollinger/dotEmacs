;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("dg_safety_s.h" include nil nil [733 757])
            ("dg_host_safety.h" include nil nil [758 785])
            ("dg_error.h" include nil nil [786 807])
            ("dg_stdio.h" include nil nil [808 829])
            ("string.h" include (:system-flag t) nil [830 849])
            ("stdlib.h" include (:system-flag t) nil [850 869])
            ("dg_svc_s.h" include nil nil [870 891])
            ("src/dm_hdc_controller.h" include nil nil [915 949])
            ("src/dm_rpc.h" include nil nil [950 973])
            ("dg_trace_by_id" variable (:constant-flag t) nil [1112 1126])
            ("dg_trace_register_name" variable (:constant-flag t) nil [1152 1174])
            ("DEBUG_SAFETY" variable (:constant-flag t) nil [1326 1338])
            ("db_printf" variable (:constant-flag t) nil [1419 1428])
            ("HOST_VERSION_MAJOR" variable (:constant-flag t) nil [1747 1765])
            ("HOST_VERSION_MINOR" variable (:constant-flag t) nil [1853 1871])
            ("SAFETY_DRIVER_VERSION" variable (:constant-flag t) nil [1960 1981])
            ("SAFETY_DRIVER_VERSION_STR" variable (:constant-flag t) nil [2049 2074])
            ("VERSION_MAX_LEN" variable (:constant-flag t) nil [2149 2164])
            ("safety_get_version" function
               (:prototype-flag t
                :arguments 
                  ( ("val" variable
                       (:pointer 1
                        :type ("DG_CHAR8" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2980 2994])
                    ("val_len" variable (:type ("DG_U32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2999 3014])
                    ("itf_nr" variable
                       (:pointer 1
                        :type ("DG_U8" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3019 3033]))                  
                :type ("DG_S32" type (:type "class") nil nil))
                nil [2949 3034])
            ("dg_safety_init" function
               (:prototype-flag t
                :arguments 
                  ( ("version" variable
                       (:pointer 1
                        :type ("DG_S32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3593 3609])
                    ("life_sign_interval" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("DG_U32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3614 3647])
                    ("ret_val" variable
                       (:pointer 1
                        :type ("DG_S32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3652 3668])
                    ("dg_errno" variable
                       (:pointer 1
                        :type ("DG_S32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3673 3690]))                  
                :type "void")
                nil [3568 3691])
            ("dg_safety_life_sign" function
               (:prototype-flag t
                :arguments 
                  ( ("life_sign_seq" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("DG_U32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4006 4034])
                    ("ret_val" variable
                       (:pointer 1
                        :type ("DG_S32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4039 4055])
                    ("dg_errno" variable
                       (:pointer 1
                        :type ("DG_S32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4060 4077]))                  
                :type "void")
                nil [3976 4078])
            ("safety_get_version" function
               (:arguments 
                  ( ("val" variable
                       (:pointer 1
                        :type ("DG_CHAR8" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4331 4345])
                    ("val_len" variable (:type ("DG_U32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4350 4365])
                    ("itf_nr" variable
                       (:pointer 1
                        :type ("DG_U8" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4370 4384]))                  
                :type ("DG_S32" type (:type "class") nil nil))
                nil [4300 4899])
            ("dg_safety_init" function
               (:arguments 
                  ( ("version" variable
                       (:pointer 1
                        :type ("DG_S32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4940 4956])
                    ("life_sign_interval" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("DG_U32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4961 4994])
                    ("ret_val" variable
                       (:pointer 1
                        :type ("DG_S32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4999 5015])
                    ("dg_errno" variable
                       (:pointer 1
                        :type ("DG_S32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5020 5037]))                  
                :type "void")
                nil [4915 5839])
            ("dg_safety_life_sign" function
               (:arguments 
                  ( ("life_sign_seq" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("DG_U32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5885 5913])
                    ("ret_val" variable
                       (:pointer 1
                        :type ("DG_S32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5918 5934])
                    ("dg_errno" variable
                       (:pointer 1
                        :type ("DG_S32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5939 5956]))                  
                :type "void")
                nil [5855 6133])
            ("dg_hdc_safety_init" function (:type "void") nil [6358 8094]))          
      :file "dg_safety_s.c"
      :pointmax 8111
      :fsize 8402
      :lastmodtime '(24037 16578 950420 400000)
      :unmatched-syntax '((symbol 6343 . 6357) (symbol 5841 . 5854) (symbol 4901 . 4914) (symbol 4286 . 4299) (symbol 3962 . 3975) (symbol 3554 . 3567) (symbol 2935 . 2948))
      :lexical-table 
        '(("dg_trace_register_name" (spp-arg-list ("a" "...") 1174 . 1181) . ((semantic-list "((void)0)" 1182 . 1191)))
          ("SAFETY_DRIVER_VERSION_STR" . ((string "\"version 1.1\"" 2075 . 2088)))
          ("HOST_VERSION_MAJOR" . ((number "1" 1766 . 1767)))
          ("VERSION_MAX_LEN" . ((number "20" 2165 . 2167)))
          ("dg_trace_by_id" (spp-arg-list ("a" "...") 1126 . 1133) . ((semantic-list "((void)0)" 1134 . 1143)))
          ("DEBUG_SAFETY" . ((number "0" 1339 . 1340)))
          ("HOST_VERSION_MINOR" . ((number "1" 1872 . 1873)))
          ("SAFETY_DRIVER_VERSION" . ((number "0x00010001" 1982 . 1992)))
          ("db_printf" (spp-arg-list ("fmt" "...") 1428 . 1437))
          )
)
    (semanticdb-table "semanticdb-table"
      :file "dg_safety_s.h"
      :fsize 2097
      :lastmodtime '(24037 16578 951401 700000)))
  :file "!mnt!c!duagon!i214_bek!mod!HDC_protocols!code!ext_itf!safety!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
